{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,EAAOC,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLJ,EACFE,EAAQ,C,SAAEJ,E,MAAUC,IAEpBI,EAAO,C,SAAEL,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAVAM,SAASC,cAAc,SAc/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAEN,MAAQV,MAAAW,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAMK,OAAOC,SACvCC,EAAaC,OAAON,EAAMO,OAC1BC,EAAYF,OAAOL,EAAKM,QAE1BF,EAAa,GAAKG,EAAY,GAAKN,EAAOK,MAAQ,IACpDtB,EAAAwB,OAAOC,QAAQ,qCAGjB,MAAMC,EAAW,GACjB,IAAK,IAAIC,EAAI,EAAGA,GAAKV,EAAOK,MAAOK,GAAK,EAAG,CACzC,MAAMtB,EAAgBuB,KAAKC,SAAW,GACtCH,EAASI,KAAK5B,EAAcyB,EAAGP,EAAYf,G,CAG7CC,QAAQyB,IAAIL,GACTM,MAAKC,IACJA,EAAQC,SAAQ,EAAC/B,SAAEA,EAAQC,MAAEA,MAC3BJ,EAAAwB,OAAOW,QAAQ,qBAAqBhC,QAAeC,MAAU,GAC7D,IAEHgC,OAAMH,IACLA,EAAQC,SAAQ,EAAC/B,SAAEA,EAAQC,MAAEA,MAC3BJ,EAAAwB,OAAOC,QAAQ,oBAAoBtB,QAAeC,MAAU,GAC5D,IAGNS,EAAMwB,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay, shouldResolve) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const { delay, step, amount } = event.target.elements;\n  const delayValue = Number(delay.value);\n  const stepValue = Number(step.value);\n\n  if (delayValue < 1 || stepValue < 1 || amount.value < 1) {\n    Notify.failure(`All fields must be more than zero`);\n  }\n\n  const promises = [];\n  for (let i = 1; i <= amount.value; i += 1) {\n    const shouldResolve = Math.random() > 0.3;\n    promises.push(createPromise(i, delayValue, shouldResolve));\n  }\n\n  Promise.all(promises)\n    .then(results => {\n      results.forEach(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      });\n    })\n    .catch(results => {\n      results.forEach(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    });\n\n  event.currentTarget.reset();\n}\n\n// let timeId = null;\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n\n//   return new Promise((resolve, reject) => {\n//     timeId = setTimeout(() => {\n//       if (shouldResolve) {\n//         resolve({ position, delay });\n//       } else {\n//         reject({ position, delay });\n//       }\n//     }, delay);\n//   });\n// }\n\n// form.addEventListener('submit', onFormSubmit);\n\n// function onFormSubmit(event) {\n//   event.preventDefault();\n//   clearTimeout(timeId);\n\n//   const { delay, step, amount } = event.target.elements;\n//   let stepValue = Number(delay.value);\n\n//   if (delay.value < 1 || step.value < 1 || amount.value < 1) {\n//     Notify.failure(`All fields must be more than zero`);\n//     return;\n//   }\n\n//   for (let i = 1; (i += amount.value); i += 1) {\n//     createPromise(i, stepValue)\n//       .then(({ position, delay }) => {\n//         Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n//       })\n//       .catch(({ position, delay }) => {\n//         Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n//       });\n//     stepValue += Number(step.value);\n//   }\n\n//   event.currentTarget.reset();\n// }\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","delay1","step","amount","target","elements","delayValue","Number","value","stepValue","Notify","failure","promises","i","Math","random","push","all","then","results","forEach","success","catch","currentTarget","reset"],"version":3,"file":"03-promises.150b32d8.js.map"}